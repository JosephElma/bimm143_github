---
title: "Class 8: PCA miniproject"
author: "Joseph Elmaghraby A16788229"
format: pdf
---

Today we will complete analysis of some breast cancer biopsy data but first let's revisit the main PCA function in R `prcomp()` and see what `scale=TRUE/FALSE` does. 

```{r}
head(mtcars)
```


Find the mean value per column of this data set
```{r}
apply(mtcars,2, mean)
```
```{r}
apply(mtcars,2, sd)
```



It is clear that displacement and horsepower have the highest mean values and the highest standard deviation. They will likely dominate any analysis I do on this data-set. Let's see: 


```{r}
pc.noscale <- prcomp(mtcars)
pc.scale <- prcomp(mtcars, scale=TRUE)
```


```{r}
biplot(pc.noscale)
```
```{r}
pc.noscale$rotation[,1]
```

plot the loadings 

```{r}
library(ggplot2)

r1 <-as.data.frame(pc.noscale$rotation )
r1$names <-rownames(pc.noscale$rotation)

ggplot(r1)+
  aes(PC1,names)+
  geom_col()
```


```{r}

r2 <-as.data.frame(pc.scale$rotation )
r2$names <-rownames(pc.scale$rotation)

ggplot(r2)+
  aes(PC1,names)+
  geom_col()
```
```{r}
 biplot(pc.scale)
```
> **Take-home**: Generally we always want to set `scale=TRUE`
when we do this type of analysis to avoid our analysis being dominated by individual variables with the largest variance just due to their unit of measurement.

#FNA breast cancer data 

Load the data in R. 
```{r}
wisc.df<- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.df)
```


> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

> Q2. How many of the observations have a malignant diagnosis?

```{r}
sum(wisc.df$diagnosis =="M")

```
The `table()` function is super useful here. 
```{r}
table(wisc.df$diagnosis)
```


> Q3. How many variables/features in the data are suffixed with _mean?

```{r}

ncol(wisc.df)

```
```{r}
colnames(wisc.df)
```
A useful function for this is the `grep()` 

```{r}
length(grep ("_mean", colnames(wisc.df)))
```

Before we go any further we need to exclude the diagnosis column from any further analysis- this tells us whether a sample to  cancer or non-cancer. 

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
head(diagnosis)
```
```{r}
wisc.data <- wisc.df[,-1]

```
Lets see if we can cluster the `wisc.data` to find some structure in the dataset. 
```{r}
hc<- hclust(dist(wisc.data))
plot(hc)
```

#Principal Component Analysis (PCA)
```{r}
wisc.pr <- prcomp (wisc.data, scale=T)
summary(wisc.pr)
```
>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?
0.4427 or (44.27%)
>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?
Three Principal Components
>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
Seven Principal Components

```{r}
biplot (wisc.pr)
```

>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

This biplot stinks! We need to build our PCA score plot of Pc1vsPC2

```{r}
head(wisc.pr$x)
```

Plot of PC1 vs PC2 the first two columns
```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=diagnosis)
```
>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x[,1 ],wisc.pr$x[,3], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")
```

Answer: There exist a clear distinct between these two. As well as, malignant and benign being clearly seperate from each other. 


Make a ggplot version of this score plot:

```{r}
pc<-as.data.frame(wisc.pr$x)

ggplot(pc)+
  aes(x=PC1,y=PC2,col=diagnosis)+
  geom_point()
```

```{r}
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
pve <- pr.var/sum(pr.var)


plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```
**(Same Data)**

```{r}
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

**Communicating PCA Results**

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation["concave.points_mean",1]

```
>Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
wisc.pr <- prcomp (wisc.data, scale=T)
summary(wisc.pr)
```
Answer: 5 PCA required to explain 80% of variance data. 


**Hierarchical Clustering**


```{r}
data.scaled <- scale((wisc.data))

```

```{r}
data.dist <- dist((data.scaled))

```

```{r}
wisc.hclust <- hclust(data.dist, )

```
>Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

Answer: 19

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust,k=4)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```
>Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust,k=4)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```

Answer: I believe that the best cluster vs diagnoses match is 10, since it has the most definitive clusters. However, there is always a trade off, since is there not one single cluster grouping that doesn't create false positives. 

**Clustering on PCA results**
```{r}
hc<-hclust(dist(wisc.pr$x[,1:2]), method= "ward.D2")
plot(hc)
abline(h=70,col="red")

```

>Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

Answer: Ward.2 is the my personal favorite for this specific data set since it minimizes the variance of the data set and makes it easier to understand. 

**K-means clustering and comparing results**
```{r}
wisc.km <- kmeans(scale(wisc.data), centers= 2, nstart= 20)

```
```{r}
table(wisc.km$cluster, diagnosis)
```
```{r}
table(wisc.hclust.clusters, wisc.km$cluster)
```
>Q14. How well does k-means separate the two diagnoses? How does it compare to your hclust results?

Answer: I would say it is a little bit better however, overall the clustering for both would not give confidence in all diagnosis except for some clusters.  

Cluster membership vector

```{r}
grps <- cutree (hc,h=70)
table(grps)
```

```{r}
table(diagnosis)
```

Cross-table to see how my clustering groups corresponded to the expert diagnosis vvector of M and B values

```{r}
table(grps, diagnosis)
```

positive=> cancer M
Negative=> non-cancer B

True=cluster/grp1
False= grp 2

True Positive 177
False Positive 18
True Negative 339
False Negative 35

We can use our PCA results (wisc.pr) to make predictions on new unseen data. 

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```
```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
```


```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
```

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}

table(cutree(wisc.pr.hclust,k=4), diagnosis)
```
Answer: The first two clusters are pretty good at determining diagnosis. However, the third and fourth clusters are not good at determining diagnosis. That makes this model pretty bad at determining diagnosis. 

>Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
table(wisc.km$cluster, diagnosis)
table(wisc.hclust.clusters, diagnosis)
```


Answer: They are both bad. However, k-means is a simpler 2-cluster set up, with significantly more errors. Hclust, is more accurate, but also more complex. This makes both inadequate for clincial use.  
**6. Sensitivity/Specificity**
Q17. Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

Answer: Each method is good at its owns thing. Hierarchical gave more benign results than malignant. Hierarchical combined with PCA gave more malignant than benign. Meaning combined was more sensitive, and hierarchical was more specific. 
**7. Prediction**

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)


```
```{r}
plot(wisc.pr$x[,1:2], col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
>Q18. Which of these new patients should we prioritize for follow up based on your results?

Answer: Patient 1 should be prioritized for a follow up since they lie in a predominantly malignant (red) cluster. 
