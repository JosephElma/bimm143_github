---
title: "Class 9: Halloween Candy"
author: " Joseph Elmaghraby (A:16788229) Date: 02/04/2025"
format: pdf
toc: true
---

Today we will examine data from 538 on common Halloween candy. In particular we will use ggplot, dplyr, and PCA to make sense of this multivariate dataset. 

## Importing Candy Data

```{r}
candy <- read.csv("candy-data.csv", row.names= 1)
head (candy) 
```

>Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```
Answer: 85

>Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```
Answer: 38

## What is your favorite candy?

>Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Nerds", ]$winpercent
```
Answer: Nerds is my favorite candy, and its winpercent is 55.35%.

>Q4. What is the winpercent value for “Kit Kat”? 

```{r}
candy["Kit Kat", ]$winpercent
```
Answer: Kit Kat's win percent is 76.7%.

>Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

Answer: The win percent of Tootsie Roll Snack Bars is 49.6%. 

> How many chocolate candy are in the dataset?




```{r}
sum(candy$chocolate)
```
Answer: 37

To get a quick overview of a new datset the `skimr` package can be useful:

>Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

```{r}
library("skimr")
skim(candy)
```

Answer: The `winpercent` column is different than the rest. It has much higher values. It looks like `winpercent` column is on a different scale than the others (0-100% rather than 0-1). I will need to scale this dataset before analysis like PCA. 

>Q7. What do you think a zero and one represent for the candy$chocolate column?

Answer: The zero's represent that the candy does not have chocolate, one's means it does have chocolate. For example, starburst would have a zero. 

>Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```
```{r}
library(ggplot2)

ggplot(candy)+
  aes(winpercent)+
    geom_histogram(bins=10, fill="lightblue")
    
```



>Q9. Is the distribution of winpercent values symmetrical?

No, the distribution is not symmetrical it skews to the left.

>Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy$winpercent)
```
Below, since the median is below. 

>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

-step 1: find all "chocolate" candy 
```{r}
choc.inds<-candy$chocolate == 1

```

-step 2: find their "winpercent" values 
```{r}
choc.win<-candy[choc.inds, ]$winpercent
```

-step 3: summarize these values  

```{r}
mean(choc.win)
```

-step 4: find all "fruity" candy 
```{r}
fruity.inds<-candy$fruity == 1
```

-step 5: find their winpercent values 
```{r}
fruity.win<-candy[fruity.inds, ]$winpercent
```

-step 6: summarize these values  
```{r}
mean(fruity.win)
```


-step 7: compare the two summary values 

Answer: The chocolate is higher ranked because the mean is higher (60.9) compared to fruity (44.1).



>Q12. Is this difference statistically significant

```{r}
t.test(choc.win,fruity.win)
```

Answer: The p-value is very low (2.871e-08) meaning this difference is statistically significant.  


```{r}
candy$winpercent

```
## Overall Candy Rankings

>Q13. What are the five least liked candy types in this set?

```{r}
#not that useful- it just sorts values
sort(candy$winpercent)

```
```{r}
x<-c(10,1,100)
sort(x)
```
```{r}
x[ order(x)]
```
The `order()` function tells us how to arange the elments of the inpuut to make them sorted- i.e. how to order them 

we can determine the order of win percent to make them sorted and use that order to arrange the whole dataset.

```{r}
ord.inds<- order (candy$winpercent)
head(candy[ord.inds,])
```


>Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
ord.inds <- order(candy$winpercent, decreasing=T)
head(candy[ord.inds,])
```
>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) +
  aes(winpercent,rownames(candy)) +
  geom_col()
 
```
Let's rearrange
>Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) +
  aes(winpercent,reorder(rownames(candy),winpercent)) +
  geom_col()
 
```
```{r}

ggplot(candy) +
  aes(winpercent,reorder(rownames(candy),winpercent),fill=chocolate) +
  geom_col()
 

```

We Need to make our own seperate color vector where we can spell out what candy is colored a particular color.

```{r}
mycols<- rep("gray",nrow(candy))
mycols [candy$chocolate ==1] <-"chocolate"
mycols [candy$bar ==1] <-"brown"
mycols [candy$fruity ==1] <-"blue"
mycols

```

```{r}
ggplot(candy) +
  aes(winpercent,reorder(rownames(candy),winpercent)) +
  geom_col(fill=mycols)
 
```
> Q17. What is the worst ranked chocolate candy?

Based on the figure the worst ranked chocoalte candy is Sixlets.

> Q18. What is the best ranked fruity candy?

Based on the figure the best ranked fruity candy is Starburst.


## Taking a look at Price percent
Make a plot of winpercent (x-axis) vs price percent (y-axis)

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=mycols) + 
  geom_text()
```
To avoid overlap of the text labels we can use the add on package

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=mycols) + 
  geom_text_repel(max.overlaps=6) 
```

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```


>Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Answer: The candy that ranked the highest in terms of winpercent foe the least money was Reese's Miniatures.

>Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

Answer: Nik L Nip's, Ring Pop, Nestle smarties, Ring Pop, and Hershey's Krackel.

The candy that is the most expensive and least popular is Nik L Nip's. v

> Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_col()
```

```{r}
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

## Exploring the correlation structure

First we will use correlation and view the results with the  **corrplot** package to plot a correlation matrix

```{r}
library(corrplot)

cij <- cor(candy)
corrplot(cij)

```

>Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Answer: Chocolate and Fruity are anti correlated. 

>Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent are the most positively correlated. 


## Principal Component Analysis 

```{r}
pca <- prcomp(candy, scale=TRUE)

```

```{r}
summary(pca)
```

```{r}
attributes(pca)
```
```{r}
plot(pca$x[,1:2], col=mycols, pch=16)
```
```{r}
my_data <- cbind(candy, pca$x[,1:3])
```
```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=mycols)

p
```
```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=mycols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

Let's plot our main results as our PCA "score plot" 

```{r}
pca$x
ggplot(pca$x)+
  aes(PC1, PC2, label=rownames(pca$x))+
  geom_point(col=mycols)+
  geom_text(col=mycols)
```



Finally let's look how the original variables contribute to the PCs, start with pc1

```{r}
ggplot(pca$rotation) +
  aes(PC1, reorder(rownames(pca$rotation), PC1 )) +
  geom_col()

```



> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Answer: The variable picked up strongly by PC1 in the positive direction are fruity, pluribus, and hard. This is a little bit confusing since fruity, pluribus, and hard are usually associated with being unpopular. 